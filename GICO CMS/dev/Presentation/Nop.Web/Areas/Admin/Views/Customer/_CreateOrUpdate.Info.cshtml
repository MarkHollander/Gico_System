@using System.Text.Encodings.Web
@model CustomerModel

<div class="panel-group">
    @await Component.InvokeAsync("AdminWidget", new { widgetZone = "admin_customer_details_info_top", additionalData = Model.Id })
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="Email" />
                </div>
                <div class="col-md-9">
                    <nop-editor asp-for="Email" />
                    <span asp-validation-for="Email"></span>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="Password" />
                </div>
                <div class="col-md-9">
                    <div class="input-group">
                        <nop-editor asp-for="Password" />
                        <div class="input-group-btn">
                            @if (Model.Id > 0)
                            {
                                <button type="submit" name="changepassword" class="btn btn-info">
                                    @T("Admin.Customers.Customers.Fields.Password.Change")
                                </button>
                            }
                        </div>
                    </div>
                    <span asp-validation-for="Password"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="SelectedCustomerRoleIds" />
                </div>
                <div class="col-md-9">
                    <div class="input-group input-group-required">
                        <nop-select asp-for="SelectedCustomerRoleIds" asp-items="Model.AvailableCustomerRoles" asp-multiple="true" />
                        <div class="input-group-btn">
                            <nop-required />
                        </div>
                    </div>
                    <script type="text/javascript">
                    $(document).ready(function() {
                        var customerRolesIdsInput = $('#@Html.IdFor(model => model.SelectedCustomerRoleIds)').data("kendoMultiSelect");
                        customerRolesIdsInput.setOptions({
                            customerRolesIdsInput: false,
                            filter: "contains"
                        });

                        @if (Model.AvailableCustomerRoles.Count == 0)
                        {
                            <text>
                                customerRolesIdsInput.setOptions({
                                    enable: false,
                                    placeholder: '@T("Admin.Customers.Customers.Fields.CustomerRoles.NoRoles")'
                                });
                                customerRolesIdsInput._placeholder();
                                customerRolesIdsInput._enable();
                            </text>
                        }
                    });
                    </script>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="Gender" />
                </div>
                <div class="col-md-9">
                    <div class="raw">
                        <div class="col-md-1">
                            <div class="radio">
                                <label>
                                    @Html.RadioButton("Gender", "M", (Model.Gender == "M"), new { id = "Gender_Male" })
                                    @T("Admin.Customers.Customers.Fields.Gender.Male")
                                </label>
                            </div>
                        </div>
                        <div class="col-md-11">
                            <div class="radio">
                                <label>
                                    @Html.RadioButton("Gender", "F", (Model.Gender == "F"), new { id = "Gender_Female" })
                                    @T("Admin.Customers.Customers.Fields.Gender.Female")
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="FullName" />
                </div>
                <div class="col-md-9">
                    <nop-editor asp-for="FullName" />
                    <span asp-validation-for="FullName"></span>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="DateOfBirth" />
                </div>
                <div class="col-md-9">
                    <nop-editor asp-for="DateOfBirth" />
                    <span asp-validation-for="DateOfBirth"></span>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="Phone" />
                </div>
                <div class="col-md-9">
                    <nop-editor asp-for="Phone" />
                    <span asp-validation-for="Phone"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="AdminComment" />
                </div>
                <div class="col-md-9">
                    <nop-textarea asp-for="AdminComment" />
                    <span asp-validation-for="AdminComment"></span>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="IsTaxExempt" />
                </div>
                <div class="col-md-9">
                    <nop-editor asp-for="IsTaxExempt" />
                    <span asp-validation-for="IsTaxExempt"></span>
                </div>
            </div>
            @T("Admin.Customers.Customers.Fields.CustomerRoles.NoRoles")
            @if (Model.Id > 0)
            {
                <div class="form-group">
                    <div class="col-md-3">
                        <nop-label asp-for="LastIpAddress" />
                    </div>
                    <div class="col-md-9">
                        <div class="form-text-row">@Model.LastIpAddress</div>
                    </div>
                </div>
            }
            @if (Model.Id > 0)
            {
                <div class="form-group">
                    <div class="col-md-3">
                        <nop-label asp-for="CreatedOn" />
                    </div>
                    <div class="col-md-9">
                        <div class="form-text-row">@Model.CreatedOn</div>
                    </div>
                </div>
            }
        </div>
    </div>
    @await Component.InvokeAsync("AdminWidget", new { widgetZone = "admin_customer_details_info_bottom", additionalData = Model.Id })
</div>